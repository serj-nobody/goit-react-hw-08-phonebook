{"version":3,"file":"static/js/751.58d7fa88.chunk.js","mappings":"8SAUaA,EAAW,WACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAMMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgB,SAACC,GACrB,MAAwBA,EAAMC,cAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAEd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MACF,IAAK,QACHR,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GACZ,MACF,QACE,SAuBN,OACE,UAACC,EAAD,CAAYC,UAAU,OAAOC,SAdd,SAACL,GAChBA,EAAMM,iBAEN,IAAMC,EAAO,CACXhB,KAAMA,EACNE,MAAOA,EACPE,SAAUA,GAGZE,GAASW,EAAAA,EAAAA,IAAWD,IAdpBf,EAAQ,IACRE,EAAS,IACTE,EAAY,KAiBqCa,aAAa,MAA9D,WACE,UAACC,EAAD,YACE,SAACC,EAAD,CACEC,GAAG,oBACHC,MAAM,OACNC,KAAK,OACLvB,KAAK,OACLW,MAAOX,EACPwB,SAAUhB,EACViB,KAAK,QACLC,UAAQ,KAEV,SAACN,EAAD,CACEC,GAAG,oBACHC,MAAM,QACNC,KAAK,QACLvB,KAAK,QACLW,MAAOT,EACPsB,SAAUhB,EACViB,KAAK,QACLC,UAAQ,KAEV,SAACN,EAAD,CACEC,GAAG,0BACHC,MAAM,WACNC,KAAK,WACLvB,KAAK,WACLW,MAAOP,EACPoB,SAAUhB,EACViB,KAAK,QACLC,UAAQ,QAGZ,SAACC,EAAA,EAAD,CAAQJ,KAAK,SAASK,QAAQ,YAAYC,MAAM,UAAhD,0BA+CAjB,GAAakB,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAY,CAC7BE,QAAS,OACTC,cAAe,SACfC,WAAY,WAGRf,GAAeW,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAY,CAC/BE,QAAS,OACTC,cAAe,WAGXb,GAAcU,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,CAAkB,CACpCM,aAAc,S,UCtJhB,EAA8B,8BC0B9B,EAjBiB,WACf,OAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAGhB,OAFgBC,EAAAA,EAAAA,MAGP,SAAC,KAAD,CAAUC,GAAG,eAIpB,iBAAKC,UAAWC,EAAhB,WACE,SAACC,EAAA,EAAD,CAAYjB,QAAQ,KAAKkB,GAAI,CAACV,aAAc,QAA5C,2BACA,SAACtC,EAAD,IACCyC,GAAUQ,MAAM,QAAD,OAASP,EAAT","sources":["components/AuthForm/AuthForm.jsx","webpack://react-homework-template/./src/pages/AuthPage/AuthPage.module.css?5b0f","pages/AuthPage/AuthPage.jsx"],"sourcesContent":["import { useState } from \"react\";\n// import { nanoid } from \"nanoid\";\nimport { useDispatch } from \"react-redux\";\nimport { signupUser } from \"redux/Auth/auth-operations\";\n\nimport { styled, Box, TextField, Button } from \"@mui/material\";\n// import css from \"./AuthForm.module.css\"\n\n\n\nexport const AuthForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // const nameInputID = nanoid();\n  // const emailInputID = nanoid();\n  // const passwordInputID = nanoid();\n\n  const dispatch = useDispatch();\n\n  const onInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    \n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    };\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const user = {\n      name: name,\n      email: email,\n      password: password,\n    };\n\n    dispatch(signupUser(user));\n    reset();\n  };\n\n  return (\n    <StyledForm component='form' onSubmit={onSubmit} autoComplete='off'>\n      <InputWrapper>\n        <StyledInput\n          id=\"outlined-required\"\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={onInputChange}\n          size=\"small\"\n          required\n        />\n        <StyledInput\n          id=\"outlined-required\"\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={onInputChange}\n          size=\"small\"\n          required\n        />\n        <StyledInput\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={onInputChange}\n          size=\"small\"\n          required\n        />\n      </InputWrapper>\n      <Button type=\"submit\" variant=\"contained\" color='warning'>Register</Button>\n    </StyledForm>\n\n    // <form className={css.form} onSubmit={onSubmit}>\n    //   <div className={css.inputGroup}>\n    //     <label className={css.label} htmlFor={nameInputID}>Name:</label>\n    //     <input\n    //       id={nameInputID}\n    //       type=\"text\"\n    //       name=\"name\"\n    //       value={name}\n    //       onChange={onInputChange}\n    //       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    //       title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    //       required\n    //     />\n    //   </div>\n    //   <div className={css.inputGroup}>\n    //     <label className={css.label} htmlFor={emailInputID}>Email:</label>\n    //     <input\n    //       id={emailInputID}\n    //       type=\"email\"\n    //       name=\"email\"\n    //       value={email}\n    //       onChange={onInputChange}\n    //       required\n    //     />\n    //   </div>\n    //   <div className={css.inputGroup}>\n    //     <label className={css.label} htmlFor={passwordInputID}>Password:</label>\n    //     <input\n    //       id={passwordInputID}\n    //       type=\"password\"\n    //       name=\"password\"\n    //       value={password}\n    //       onChange={onInputChange}\n    //       required\n    //     />\n    //   </div>\n    //   <div className={css.inputGroup}>\n    //     <button type=\"submit\">Register</button>\n    //   </div>\n    // </form>\n  );\n}\n\n\nconst StyledForm = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: 'center',\n});\n\nconst InputWrapper = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n\nconst StyledInput = styled(TextField)({\n  marginBottom: \"25px\",\n});","// extracted by mini-css-extract-plugin\nexport default {\"pageWrapper\":\"AuthPage_pageWrapper__CqwmX\",\"pageTitle\":\"AuthPage_pageTitle__WltX2\"};","import { useSelector } from \"react-redux\";\nimport { getAuthError} from \"redux/Auth/auth-selectors\";\nimport { Navigate } from \"react-router-dom\";\nimport useAuth from \"shared/hooks/useAuth\";\n\nimport { AuthForm } from \"components/AuthForm/AuthForm\";\n\nimport { Typography } from \"@mui/material\";\nimport css from \"./AuthPage.module.css\"\n\nconst AuthPage = () => {\n  const { status, message } = useSelector(getAuthError);\n  const isLogin = useAuth();\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />\n  };\n\n  return (\n    <div className={css.pageWrapper}>\n      <Typography variant=\"h5\" sx={{marginBottom: '25px'}}>Sign Up Form</Typography>\n      <AuthForm />\n      {status && alert(`User ${message} is already in use!`)}\n    </div>\n  );\n};\n\nexport default AuthPage;"],"names":["AuthForm","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","onInputChange","event","currentTarget","value","StyledForm","component","onSubmit","preventDefault","user","signupUser","autoComplete","InputWrapper","StyledInput","id","label","type","onChange","size","required","Button","variant","color","styled","Box","display","flexDirection","alignItems","TextField","marginBottom","useSelector","getAuthError","status","message","useAuth","to","className","css","Typography","sx","alert"],"sourceRoot":""}